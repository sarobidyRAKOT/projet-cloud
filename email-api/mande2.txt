package com.example.cryptomonnaie.controllers;

import com.example.cryptomonnaie.services.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

@Controller
public class RegisterController {

    @Autowired
    private UserService userService;

    @GetMapping("/register")
    public String showRegistrationForm() {
        return "register";
    }

    @PostMapping("/register")
    public String registerUser(@RequestParam("nom") String nom,
                               @RequestParam("prenom") String prenom,
                               @RequestParam("email") String email,
                               @RequestParam("password") String password,
                               Model model) {
        String response = userService.registerUser(nom, prenom, email, password);
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            JsonNode responseJson = objectMapper.readTree(response);
            if (responseJson.has("message")) {
                model.addAttribute("successMessage", responseJson.get("message").asText());
            } else if (responseJson.has("error")) {
                model.addAttribute("errorMessage", "Erreur : " + responseJson.get("error").asText());
            } else {
                model.addAttribute("errorMessage", "Erreur inconnue : " + response);
            }
        } catch (Exception e) {
            model.addAttribute("errorMessage", "Erreur lors de l'analyse de la réponse : " + e.getMessage());
        }
        return "register";
    }

    @GetMapping("/login")
    public String showLoginForm() {
        return "login";
    }

    @PostMapping("/login")
    public String loginUser(@RequestParam("email") String email,
                            @RequestParam("password") String password,
                            @RequestParam("code_pin") int codePin,
                            Model model) {
        String response = userService.loginUser(email, password, codePin);
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            JsonNode responseJson = objectMapper.readTree(response);
            if (responseJson.has("message")) {
                model.addAttribute("successMessage", responseJson.get("message").asText());
            } else if (responseJson.has("error")) {
                model.addAttribute("errorMessage", "Erreur : " + responseJson.get("error").asText());
            } else {
                model.addAttribute("errorMessage", "Erreur inconnue : " + response);
            }
        } catch (Exception e) {
            model.addAttribute("errorMessage", "Erreur lors de l'analyse de la réponse : " + e.getMessage());
        }
        return "login";
    }
}
